# 1. Read outcome data
# 2. Check that state and outcome are valid
# 3. Return hospital name in that state with the lowest 30-day death rate

rm(list=ls())  # clear workspace

# TEST CASES
# best("AK","heart attack")   # yes, working well
# best("MD","heart attack")   # yes, working well
# best("TX","heart attack")   # yes, working well
# best("TX","heart failure")  # yes, working well
# best("MD","pneumonia")  # multiple hospitals, working well
# best("BB","heart attack")   # message not yet, but yes the error appears, which is correct
# best("NY","hert attack")    # message not yet, but yes the error appears, which is correct




# Part 1

best <- function(state, outcome)  { 
      
      outcome <- c(outcome)
      print(outcome)
      stateF <- c(state)
      print(stateF)
      

      # correct_states <- data.frame("AK","AL", "AR", "AZ", "CA", "CO", "CT", 
      #                              "DC", "DE",   "FL", "GA", "GU", "HI", "IA", 
      #                              "ID", "IL", "IN", "KS", "KY", "LA", "MA", 
      #                              "MD", "ME", "MI", "MN", "MO", "MS", "MT", 
      #                              "NC", "ND", "NE", "NH", "NJ", "NM", "NV",
      #                              "NY", "OH", "OK", "OR", "PA", "PR", "RI", 
      #                              "SC", "SD", "TN", "TX", "UT", "VA", "VI", 
      #                              "VT", "WA", "WI", "WV", "WY")
      
      #setting working directory
      working_directory <- setwd(“~/…/rprog-data”)
      
      outcome_data <- read.csv(“…. csv”,colClasses = "character")   # read the data file
      
      hospital_name <- outcome_data [ , 2 ]  # list of all hospital names (Hospital.name variable)
      state <- outcome_data [ , 7 ]  # list of all abbreviated state names (State variable)
      outcome_data [ ,11] <- as.numeric(outcome_data [  ,11])  # hear attack
      mortality_rate_heart_attack <-  outcome_data [ ,11]
      
      outcome_data [ ,17] <- as.numeric(outcome_data [  ,17])  # hear failure
      mortality_rate_heart_failure <-  outcome_data [ ,17]
      
      outcome_data [ ,23] <- as.numeric(outcome_data [  ,23])  # pneumonia
      mortality_rate_pneumonia <-  outcome_data [ ,23]
      
      my_data1 <- data.frame (hospital_name, state,  mortality_rate_heart_attack)
      my_data2 <- data.frame (hospital_name, state,  mortality_rate_heart_failure)
      my_data3 <- data.frame (hospital_name, state,  mortality_rate_pneumonia)
      
      good1 <- complete.cases (my_data1)
      my_data1<- my_data1 [good1, ]
      good2 <- complete.cases (my_data2)
      my_data2<- my_data2 [good2,  ]
      good3 <- complete.cases (my_data3)
      my_data3<- my_data3 [good3,  ]
      
         
      if (outcome == "heart attack" ) {
       
            result <- sapply(split(my_data1$mortality_rate_heart_attack, my_data1$state), min)  
            # split my data 1 by column state and give minimum of heart rate attack for this state
            
            print(result)
            print(stateF)
           
            
            a <- my_data1$hospital_name  # vector with hospital names 
            a<- data.frame (a) 
            print(nrow(a))
            
            b <- my_data1$state == stateF   #logical vector TRUE / FALSE, only TRUE is for the selected state i.e. "AK"
            b<- data.frame (b) 
            print(nrow(b))
            
            c <- my_data1$mortality_rate_heart_attack == value_state  #logical vector TRUE / FALSE, giving TRUE for the selected state, as TRUE
            c<- data.frame (c) 
            print(nrow(c))
            
            d <- data.frame(a,b,c)
            size_d <- nrow(d)
            
            
            #empty matrixes:
            hospitalName<-matrix(nrow=nrow(d), ncol=1)
            for (i in 1:size_d) {
                  if ( d [i, 2] == TRUE & d[i,3] == TRUE) {
                        
                        hospitalName [i] <-  a [i, ]
                        print(hospitalName)
                  }
            }
            
            
      } else if (outcome == "heart failure" ) {
            result <- sapply(split(my_data2$mortality_rate_heart_failure, my_data2$state), min)  
            # split my data 1 by column state and give minimum of heart rate attack for this state
            
            print(result)
            print(stateF)
            
            # support one !!!!
            ######### state <- c("AK")  # not needed any more
            
            value_state <- result [[stateF]]   # works well
            
            
            a <- my_data2$hospital_name  # vector with hospital names 
            a<- data.frame (a) 
            print(nrow(a))
            
            b <- my_data2$state == stateF   #logical vector TRUE / FALSE, only TRUE is for the selected state i.e. "AK"
            b<- data.frame (b) 
            print(nrow(b))
            
            c <- my_data2$mortality_rate_heart_failure == value_state  #logical vector TRUE / FALSE, giving TRUE for the selected state, as TRUE
            c<- data.frame (c) 
            print(nrow(c))
            
            d <- data.frame(a,b,c)
            size_d <- nrow(d)
            
            
            #empty matrixes:
            hospitalName<-matrix(nrow=nrow(d), ncol=1)
            for (i in 1:size_d) {
                  if ( d [i, 2] == TRUE & d[i,3] == TRUE) {
                        
                        hospitalName [i] <-  a [i, ]
                        print(hospitalName)
                  }
            }
              
} else if (outcome == "pneumonia")  {
      result <- sapply(split(my_data3$mortality_rate_pneumonia, my_data3$state), min)  
      # split my data 1 by column state and give minimum of heart rate attack for this state
      
      print(result)
      print(stateF)
      
      # support one !!!!
      ######### state <- c("AK")  # not needed any more
      
      value_state <- result [[stateF]]   # works well
     
      a <- my_data3$hospital_name  # vector with hospital names 
      a<- data.frame (a) 
      print(nrow(a))
      
      b <- my_data3$state == stateF   #logical vector TRUE / FALSE, only TRUE is for the selected state i.e. "AK"
      b<- data.frame (b) 
      print(nrow(b))
      
      c <- my_data3$mortality_rate_pneumonia == value_state  #logical vector TRUE / FALSE, giving TRUE for the selected state, as TRUE
      c<- data.frame (c) 
      print(nrow(c))
      
      
      d <- data.frame(a,b,c)
      size_d <- nrow(d)
      
      
      #empty matrixes:
      hospitalName<-matrix(nrow=nrow(d), ncol=1)
      for (i in 1:size_d) {
            if ( d [i, 2] == TRUE & d[i,3] == TRUE) {
                  
                  hospitalName [i] <-  a [i, ]
                  print(hospitalName)
            }
      }
      
   
}  
my_data1
my_data2
my_data3
result
d
hospitalName
#SelectedStateName

good4 <- complete.cases (hospitalName)  # NA removal
hospitalName<- hospitalName [good4,  ]
print (hospitalName)

print( class(hospitalName))
hospitalName<- sort(hospitalName)
print( hospitalName)

hospitalNamePriority <- hospitalName [1]
print( hospitalNamePriority)

print(nrow(a))
print(nrow(b))
print(nrow(c))
print(nrow(d))
}

